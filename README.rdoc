

1. 安装bitnami-rubystack-1.9.3-24-windows-installer
2. 配置环境变量 path 里面增加 C:\Bitnami\rubystack-1.9.3-24\ruby\bin
3. 下载代码 ，git地址 git@github.com:0612800232/auto_test.git
4：进入项目目录，cmd命令 bundle install （安装相关的插件）
5. 初始化数据库 cmd命令 rake db:create （创建数据库）
6. 初始化表 cmd命令  rake db:migrate （创建表）
7. 将chrome 和 ie 的驱动 放到 C:\Bitnami\rubystack-1.9.3-24\ruby\bin


框架介绍：

1. 基于ruby语言和watire插件
2. 支持使用chrome插件录制脚本
3. 支持测试用例集合
4. 支持测试数据集合
5. 支持后台验证码获取
6. 支持密码控件
7. 支持结果比对
8， 支持结果文档生成和邮件自动发送



升级介绍：


1.1 升级内容：
       1.  支持用户管理
       2.  脚本录制优化
       3.  新增银行控件支持 
              先锋支付控件 {:id=>"userpasswdNP",:type=>"embed",},
              银联控件     {:id=>"_ocx_password",:type=>"embed",:class=>"ocx_atm ",}
              招行控件     {:id=>"CardNoCtrl",:type=>"object",} {:id=>"PwdCtrl",:type=>"object",} 
              工行控件     {:id=>"safeEdit1",:type=>"object",} 调试中，不可用
              
              
1.2 升级内容：

1.  增加两个动作，复制和黏贴
2.  优化两个数据类型枚举数和区间数，用法如下图， {} 中间的为变量 ，竖线分割为枚举数， 中划线为区间数

3. 对比结果动作优化，支持模糊匹配 ,如上图， 输入中央也能匹配成功。





2.0 升级内容：
1. 增加一个动作 截图
2. 增加一个动作 数据库比对
    写法如下： 
              动作：        数据库对比  
              元素定位：    {:name=>"customer",:password=>"customer",
                             :url=>"10.20.5.201:1521/xfdb",
                             :sql=>"select t.user_id from ucf_user t where t.user_id= '10000003801'"
                             }
              数据： 可自行选择。
     目前不足： 只能实现单个字段对比，如例子中，只能对比sql返回的user_id 是否是期望值。
     
3. 增加数据类型 ，除了纯文本格式外的数据类型有特殊的书写格式规则
   枚举数： 
          例子： 电话号码为#13757162413|18657139301#就是这个号码        
          说明： 用##包括的内容将会被切割替换，以上例子将会出现两个数据 
                 a. 电话号码为13757162413就是这个号码
                 b. 电话号码为18657139301就是这个号码
    区间数：
         例子：  电话号码为#13757162410-13757162412#就是这个号码
          说明： 用##包括的内容将会被解析替换，以上例子将会出现3个数据 
                 a. 电话号码为13757162410就是这个号码
                 b. 电话号码为13757162411就是这个号码
                 c. 电话号码为13757162412就是这个号码
    随机数：
         例子：  电话号码为13777777#2#就是这个号码
         说明：  用[] 包含的数字将会成为随机数的位数，例子中将会在脚本执行的时候随机出两位数

4. 优化结果对比动作 
    允许 结果比对 的数据中写入 充值处理中|充值成功  这样的数据， 这样结果是充值成功或者充值处理中都将比对成功
    
5. 增加用户管理，设置用户角色等功能。

6. 完善测试计划
   可以对测试计划设置 
       a.  在什么时候执行
       b.  几秒后执行
       c.  每隔几分钟执行
       d.  标准的cron 时间定义
    可以对进行的的测试计划进行暂停，启动等操作

